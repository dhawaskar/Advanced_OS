
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004004e0 <_init>:
  4004e0:	48 83 ec 08          	sub    $0x8,%rsp
  4004e4:	48 8b 05 0d 0b 20 00 	mov    0x200b0d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004eb:	48 85 c0             	test   %rax,%rax
  4004ee:	74 05                	je     4004f5 <_init+0x15>
  4004f0:	e8 8b 00 00 00       	callq  400580 <exit@plt+0x10>
  4004f5:	48 83 c4 08          	add    $0x8,%rsp
  4004f9:	c3                   	retq   

Disassembly of section .plt:

0000000000400500 <free@plt-0x10>:
  400500:	ff 35 02 0b 20 00    	pushq  0x200b02(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400506:	ff 25 04 0b 20 00    	jmpq   *0x200b04(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40050c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400510 <free@plt>:
  400510:	ff 25 02 0b 20 00    	jmpq   *0x200b02(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400516:	68 00 00 00 00       	pushq  $0x0
  40051b:	e9 e0 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400520 <puts@plt>:
  400520:	ff 25 fa 0a 20 00    	jmpq   *0x200afa(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400526:	68 01 00 00 00       	pushq  $0x1
  40052b:	e9 d0 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400530 <printf@plt>:
  400530:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400536:	68 02 00 00 00       	pushq  $0x2
  40053b:	e9 c0 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400540 <__libc_start_main@plt>:
  400540:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400546:	68 03 00 00 00       	pushq  $0x3
  40054b:	e9 b0 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400550 <getchar@plt>:
  400550:	ff 25 e2 0a 20 00    	jmpq   *0x200ae2(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400556:	68 04 00 00 00       	pushq  $0x4
  40055b:	e9 a0 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400560 <malloc@plt>:
  400560:	ff 25 da 0a 20 00    	jmpq   *0x200ada(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400566:	68 05 00 00 00       	pushq  $0x5
  40056b:	e9 90 ff ff ff       	jmpq   400500 <_init+0x20>

0000000000400570 <exit@plt>:
  400570:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400576:	68 06 00 00 00       	pushq  $0x6
  40057b:	e9 80 ff ff ff       	jmpq   400500 <_init+0x20>

Disassembly of section .plt.got:

0000000000400580 <.plt.got>:
  400580:	ff 25 72 0a 20 00    	jmpq   *0x200a72(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400586:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400590 <_start>:
  400590:	31 ed                	xor    %ebp,%ebp
  400592:	49 89 d1             	mov    %rdx,%r9
  400595:	5e                   	pop    %rsi
  400596:	48 89 e2             	mov    %rsp,%rdx
  400599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40059d:	50                   	push   %rax
  40059e:	54                   	push   %rsp
  40059f:	49 c7 c0 30 08 40 00 	mov    $0x400830,%r8
  4005a6:	48 c7 c1 c0 07 40 00 	mov    $0x4007c0,%rcx
  4005ad:	48 c7 c7 14 07 40 00 	mov    $0x400714,%rdi
  4005b4:	e8 87 ff ff ff       	callq  400540 <__libc_start_main@plt>
  4005b9:	f4                   	hlt    
  4005ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005c0 <deregister_tm_clones>:
  4005c0:	b8 67 10 60 00       	mov    $0x601067,%eax
  4005c5:	55                   	push   %rbp
  4005c6:	48 2d 60 10 60 00    	sub    $0x601060,%rax
  4005cc:	48 83 f8 0e          	cmp    $0xe,%rax
  4005d0:	48 89 e5             	mov    %rsp,%rbp
  4005d3:	76 1b                	jbe    4005f0 <deregister_tm_clones+0x30>
  4005d5:	b8 00 00 00 00       	mov    $0x0,%eax
  4005da:	48 85 c0             	test   %rax,%rax
  4005dd:	74 11                	je     4005f0 <deregister_tm_clones+0x30>
  4005df:	5d                   	pop    %rbp
  4005e0:	bf 60 10 60 00       	mov    $0x601060,%edi
  4005e5:	ff e0                	jmpq   *%rax
  4005e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4005ee:	00 00 
  4005f0:	5d                   	pop    %rbp
  4005f1:	c3                   	retq   
  4005f2:	0f 1f 40 00          	nopl   0x0(%rax)
  4005f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005fd:	00 00 00 

0000000000400600 <register_tm_clones>:
  400600:	be 60 10 60 00       	mov    $0x601060,%esi
  400605:	55                   	push   %rbp
  400606:	48 81 ee 60 10 60 00 	sub    $0x601060,%rsi
  40060d:	48 c1 fe 03          	sar    $0x3,%rsi
  400611:	48 89 e5             	mov    %rsp,%rbp
  400614:	48 89 f0             	mov    %rsi,%rax
  400617:	48 c1 e8 3f          	shr    $0x3f,%rax
  40061b:	48 01 c6             	add    %rax,%rsi
  40061e:	48 d1 fe             	sar    %rsi
  400621:	74 15                	je     400638 <register_tm_clones+0x38>
  400623:	b8 00 00 00 00       	mov    $0x0,%eax
  400628:	48 85 c0             	test   %rax,%rax
  40062b:	74 0b                	je     400638 <register_tm_clones+0x38>
  40062d:	5d                   	pop    %rbp
  40062e:	bf 60 10 60 00       	mov    $0x601060,%edi
  400633:	ff e0                	jmpq   *%rax
  400635:	0f 1f 00             	nopl   (%rax)
  400638:	5d                   	pop    %rbp
  400639:	c3                   	retq   
  40063a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400640 <__do_global_dtors_aux>:
  400640:	80 3d 19 0a 20 00 00 	cmpb   $0x0,0x200a19(%rip)        # 601060 <__TMC_END__>
  400647:	75 11                	jne    40065a <__do_global_dtors_aux+0x1a>
  400649:	55                   	push   %rbp
  40064a:	48 89 e5             	mov    %rsp,%rbp
  40064d:	e8 6e ff ff ff       	callq  4005c0 <deregister_tm_clones>
  400652:	5d                   	pop    %rbp
  400653:	c6 05 06 0a 20 00 01 	movb   $0x1,0x200a06(%rip)        # 601060 <__TMC_END__>
  40065a:	f3 c3                	repz retq 
  40065c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400660 <frame_dummy>:
  400660:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400665:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400669:	75 05                	jne    400670 <frame_dummy+0x10>
  40066b:	eb 93                	jmp    400600 <register_tm_clones>
  40066d:	0f 1f 00             	nopl   (%rax)
  400670:	b8 00 00 00 00       	mov    $0x0,%eax
  400675:	48 85 c0             	test   %rax,%rax
  400678:	74 f1                	je     40066b <frame_dummy+0xb>
  40067a:	55                   	push   %rbp
  40067b:	48 89 e5             	mov    %rsp,%rbp
  40067e:	ff d0                	callq  *%rax
  400680:	5d                   	pop    %rbp
  400681:	e9 7a ff ff ff       	jmpq   400600 <register_tm_clones>

0000000000400686 <function_allocate>:
  400686:	55                   	push   %rbp
  400687:	48 89 e5             	mov    %rsp,%rbp
  40068a:	48 83 ec 10          	sub    $0x10,%rsp
  40068e:	bf 48 08 40 00       	mov    $0x400848,%edi
  400693:	e8 88 fe ff ff       	callq  400520 <puts@plt>
  400698:	e8 b3 fe ff ff       	callq  400550 <getchar@plt>
  40069d:	bf 71 08 40 00       	mov    $0x400871,%edi
  4006a2:	b8 00 00 00 00       	mov    $0x0,%eax
  4006a7:	e8 84 fe ff ff       	callq  400530 <printf@plt>
  4006ac:	e8 9f fe ff ff       	callq  400550 <getchar@plt>
  4006b1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4006b8:	00 
  4006b9:	bf 05 00 00 00       	mov    $0x5,%edi
  4006be:	e8 9d fe ff ff       	callq  400560 <malloc@plt>
  4006c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4006cc:	75 19                	jne    4006e7 <function_allocate+0x61>
  4006ce:	bf 8e 08 40 00       	mov    $0x40088e,%edi
  4006d3:	b8 00 00 00 00       	mov    $0x0,%eax
  4006d8:	e8 53 fe ff ff       	callq  400530 <printf@plt>
  4006dd:	bf 00 00 00 00       	mov    $0x0,%edi
  4006e2:	e8 89 fe ff ff       	callq  400570 <exit@plt>
  4006e7:	bf a8 08 40 00       	mov    $0x4008a8,%edi
  4006ec:	e8 2f fe ff ff       	callq  400520 <puts@plt>
  4006f1:	e8 5a fe ff ff       	callq  400550 <getchar@plt>
  4006f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006fa:	48 89 c7             	mov    %rax,%rdi
  4006fd:	e8 0e fe ff ff       	callq  400510 <free@plt>
  400702:	bf e0 08 40 00       	mov    $0x4008e0,%edi
  400707:	e8 14 fe ff ff       	callq  400520 <puts@plt>
  40070c:	e8 3f fe ff ff       	callq  400550 <getchar@plt>
  400711:	90                   	nop
  400712:	c9                   	leaveq 
  400713:	c3                   	retq   

0000000000400714 <main>:
  400714:	55                   	push   %rbp
  400715:	48 89 e5             	mov    %rsp,%rbp
  400718:	48 83 ec 10          	sub    $0x10,%rsp
  40071c:	bf 10 09 40 00       	mov    $0x400910,%edi
  400721:	e8 fa fd ff ff       	callq  400520 <puts@plt>
  400726:	bf 71 08 40 00       	mov    $0x400871,%edi
  40072b:	b8 00 00 00 00       	mov    $0x0,%eax
  400730:	e8 fb fd ff ff       	callq  400530 <printf@plt>
  400735:	e8 16 fe ff ff       	callq  400550 <getchar@plt>
  40073a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400741:	00 
  400742:	bf 05 00 00 00       	mov    $0x5,%edi
  400747:	e8 14 fe ff ff       	callq  400560 <malloc@plt>
  40074c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400750:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400755:	75 19                	jne    400770 <main+0x5c>
  400757:	bf 8e 08 40 00       	mov    $0x40088e,%edi
  40075c:	b8 00 00 00 00       	mov    $0x0,%eax
  400761:	e8 ca fd ff ff       	callq  400530 <printf@plt>
  400766:	bf 00 00 00 00       	mov    $0x0,%edi
  40076b:	e8 00 fe ff ff       	callq  400570 <exit@plt>
  400770:	bf a8 08 40 00       	mov    $0x4008a8,%edi
  400775:	e8 a6 fd ff ff       	callq  400520 <puts@plt>
  40077a:	e8 d1 fd ff ff       	callq  400550 <getchar@plt>
  40077f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400783:	48 89 c7             	mov    %rax,%rdi
  400786:	e8 85 fd ff ff       	callq  400510 <free@plt>
  40078b:	bf 3e 09 40 00       	mov    $0x40093e,%edi
  400790:	e8 8b fd ff ff       	callq  400520 <puts@plt>
  400795:	e8 b6 fd ff ff       	callq  400550 <getchar@plt>
  40079a:	b8 00 00 00 00       	mov    $0x0,%eax
  40079f:	e8 e2 fe ff ff       	callq  400686 <function_allocate>
  4007a4:	bf 58 09 40 00       	mov    $0x400958,%edi
  4007a9:	e8 72 fd ff ff       	callq  400520 <puts@plt>
  4007ae:	b8 00 00 00 00       	mov    $0x0,%eax
  4007b3:	c9                   	leaveq 
  4007b4:	c3                   	retq   
  4007b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4007bc:	00 00 00 
  4007bf:	90                   	nop

00000000004007c0 <__libc_csu_init>:
  4007c0:	41 57                	push   %r15
  4007c2:	41 56                	push   %r14
  4007c4:	41 89 ff             	mov    %edi,%r15d
  4007c7:	41 55                	push   %r13
  4007c9:	41 54                	push   %r12
  4007cb:	4c 8d 25 3e 06 20 00 	lea    0x20063e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4007d2:	55                   	push   %rbp
  4007d3:	48 8d 2d 3e 06 20 00 	lea    0x20063e(%rip),%rbp        # 600e18 <__init_array_end>
  4007da:	53                   	push   %rbx
  4007db:	49 89 f6             	mov    %rsi,%r14
  4007de:	49 89 d5             	mov    %rdx,%r13
  4007e1:	4c 29 e5             	sub    %r12,%rbp
  4007e4:	48 83 ec 08          	sub    $0x8,%rsp
  4007e8:	48 c1 fd 03          	sar    $0x3,%rbp
  4007ec:	e8 ef fc ff ff       	callq  4004e0 <_init>
  4007f1:	48 85 ed             	test   %rbp,%rbp
  4007f4:	74 20                	je     400816 <__libc_csu_init+0x56>
  4007f6:	31 db                	xor    %ebx,%ebx
  4007f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4007ff:	00 
  400800:	4c 89 ea             	mov    %r13,%rdx
  400803:	4c 89 f6             	mov    %r14,%rsi
  400806:	44 89 ff             	mov    %r15d,%edi
  400809:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40080d:	48 83 c3 01          	add    $0x1,%rbx
  400811:	48 39 eb             	cmp    %rbp,%rbx
  400814:	75 ea                	jne    400800 <__libc_csu_init+0x40>
  400816:	48 83 c4 08          	add    $0x8,%rsp
  40081a:	5b                   	pop    %rbx
  40081b:	5d                   	pop    %rbp
  40081c:	41 5c                	pop    %r12
  40081e:	41 5d                	pop    %r13
  400820:	41 5e                	pop    %r14
  400822:	41 5f                	pop    %r15
  400824:	c3                   	retq   
  400825:	90                   	nop
  400826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40082d:	00 00 00 

0000000000400830 <__libc_csu_fini>:
  400830:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400834 <_fini>:
  400834:	48 83 ec 08          	sub    $0x8,%rsp
  400838:	48 83 c4 08          	add    $0x8,%rsp
  40083c:	c3                   	retq   
